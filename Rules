#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

ignore '/relay/maps/README'
ignore '/relay/maps/CONTRIBUTING'
ignore '*~'
ignore '*/*~'
ignore '#*#'
ignore '*/#*#'

passthrough '/404.html'
passthrough '/apple-touch-icon*.png'
passthrough '/browserconfig.xml'
passthrough '/crossdomain.xml'
passthrough '/favicon.ico'
passthrough '/favicon*.png'
passthrough '/humans.txt'
passthrough '/js/vendor/*'
passthrough '/js/main.js'
passthrough '/js/plugins.js'
passthrough '/mstile*.png'
passthrough '/robots.txt'

compile '/css/*' do
  # don’t filter or layout
end

compile 'sitemap' do
  filter :haml
end

compile '/CNAME' do
  # just here to quiet nanoc check stale
end

compile '/relay/*' do
  if item.binary?
    # don’t filter binary items
  else
    if item[:layout] == 'default'
      layout 'default'
    else
      layout 'race'
    end
    filter :erb
  end
end

compile '/js/*' do
  nil
end

compile '*' do
  if item.binary?
    # don’t filter binary items
  else
    case item[:extension]
    when 'haml'
      filter :haml
    else
      filter :erb
    end
    case item[:layout]
    when 'default'
      layout 'default'
    when 'race'
      layout 'race'
    else
      layout 'default'
    end
  end
end

route '/css/*' do
item.identifier.chop + ".css"
end

route '/js/*' do
  item.identifier.chop + ".js"
end

route '/CNAME' do
  '/CNAME'
end

route 'sitemap' do
  item.identifier.chop + '.xml'
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :erb
